.text
main:
# Prompt user to input non-negative number to compute
la $a0,prompt
li $v0,4
syscall

li $v0,5 	#read the number the user inputted
syscall

move $t2,$v0 	#move n to $t2

#call function get the factorial 
move $a0,$t2
move $v0,$t2
jal fact	#call factorial function for (n)
move $t3,$v0	#result is located in $t3

#output message and n
la $a0,result	#Print FactorialAnswer_
li $v0,4

move$a0,$t2	#Print n
li $v0,1
syscall

la $a0,result2	#Print = 
li $v0,4
syscall

la $a0,endl #Print '\n'
li $v0,4
syscall

#End the program after one go
li $v0,10
syscall

fact:
# Compute and return factorial number
beq $a0,one	#if n=0 return 1


#call factorial (n-1)
sub $sp,$sp,4	#store return address on stack
sw $ra,0($sp)

sub $a0,$a0,1 	#n-1
jal fact	#fact(n-1)
add $a0,$a0,1

lw $ra,0($sp)	#restoring return value to stack
add $sp,$sp,4

sub $sp,$sp,4	#push return value to stack
sw $v0,0($sp)
#call fact(n-2)
sub $sp,$sp,4	#store return address on stack
sw $ra,0($sp)

sub $a0,$a0,2	#n-2
jal fact	#factorial(n-2)
add $a0,$a0,2

lw $ra,0($sp)	#restore return address from stack
add $sp,$sp,4


lw $s7,0($sp)	#pop return value from stack
add $sp,$sp,4

mult $v0,$v0,$s7	#(n-2)*(n-1)
jr $ra #place next in stack 


one:
li $v0,1
jr $ra

.data
prompt: .asciiz "Enter non-negative number to input in the factorial
result: .asciiz "Factorial answer_"
result2: .asciiz " = "
endl: .asciiz"\n"

